.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.22)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "HFR 3"
.TH HFR 3 "2012-10-05" "perl v5.12.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "SUBROUTINES/METHODS"
.IX Header "SUBROUTINES/METHODS"
.SS ""
.IX Subsection ""
.SS "true_north_degrees_to_spherical_coordinate_degrees"
.IX Subsection "true_north_degrees_to_spherical_coordinate_degrees"
.SS "degrees2radians"
.IX Subsection "degrees2radians"
.SS "distance_two_points_practical"
.IX Subsection "distance_two_points_practical"
.SS "distance_haversine"
.IX Subsection "distance_haversine"
.SS "distance_law_of_cosines"
.IX Subsection "distance_law_of_cosines"
.SH "NAME"
HFR \- Perl extension for high frequency oceanographic radar data
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use HFR;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
At present this will serve as notes on the direction of \s-1HFR\s0 module.
There are a few subroutines at present:
.PP
def_t : which takes a string input of yyyy-mm-dd \s-1HH:MM\s0 and returns a Date::Calc\->Mktime result
.PP
distance : which takes in two geographic points and returns the straigth line distance between them
.PP
peak_rayliegh : computes the maximum spectrum power for a given range of power
.PP
vector_data_extract : extract vector data from a netcdf file on the qcif server
.PP
Listen, all of this is fine-and-dandy, but I really need to move away from this.  Here is what I would like to build:
.PP
\&\f(CW$nc\fR = HFR::ACORN::NetCDF\->new( ssh => \*(L"<user>@<server>:<full_path_to_netcdf> )
or
\&\f(CW$nc\fR = HFR::ACORN::NetCDF\->new( url => \*(R"<full_url_path_to_netcdf> )
.PP
These modules would need to be run first to generate the filename or list of filenames
.PP
\&\f(CW$url\fR = \s-1HFR::QCIF\-\s0>new( name => \*(L"Cape Wiles\*(R" , time => \*(L"2010\-10\-12 12:00\*(R" , qc => 1 )
or
\&\f(CW@url\fR = \s-1HFR::QCIF\-\s0>new( name => \*(L"Spencer\*(R" , time_start => \*(L"2010\-10\-12 12:00\*(R" , time_stop => \*(L"2011\-10\-12 23:00\*(R" , qc => 1 )
.PP
\&\s-1OR\s0
.PP
\&\f(CW$ssh\fR = \s-1HFR::SSH\-\s0>new( user => \*(L"codar\*(R" , server => \*(L"acorn\*(R" , name => \*(L"Cape Wiles\*(R" , time => \*(L"2010\-10\-12 12:00\*(R" , qc => 1 )
or
\&\f(CW@ssh\fR = \s-1HFR::SSH\-\s0>new( user => \*(L"codar\*(R" , server => \*(L"acorn\*(R" , name => \*(L"Spencer\*(R" , time_start => \*(L"2010\-10\-12 12:00\*(R" , time_stop => \*(L"2011\-10\-12 23:00\*(R" , qc => 1 )
.PP
\&\s-1AND\s0
.PP
Create new and load default parameters for a site or station
\&\f(CW%params\fR = HFR::Analysis::Parameters\->load( site => \*(L"South Australian Gulf\*(R" ); *this will contain grid and mask information as well as standard parameters for site*
\&\f(CW%params\fR = HFR::Analysis::Parameters\->amend( site => \*(L"\s-1SAG\s0\*(R" , temporal_averaging => 86400 , temporal_gap_tolerance => 3600 , spatial_gap_tolerance => 5 , spatial_gap_units => \*(L"km\*(R" );
\&\f(CW$vec\fR = HFR::Analysis::Vectors\->( stations => \f(CW@station_names\fR , configuration_parameters => \f(CW%params\fR , time_start => \*(L"2011\-12\-01\*(R" , time_stop => \*(L"now\*(R" , qc => 0 , write_date => 1 ); 
* the above sequence would load /SAG/ parameters, make an amendment to parameters so that 24 hour averages are made with an hour as maximum gap tolerance to average acrossxfb
.PP
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
*There is also the potential for the following:
\&\f(CW$inv\fR = HFR::ACORN::Inventory\->new;
\&\f(CW$inv\fR\->list(\*(L"Cape Wiles\*(R") or \f(CW$inv\fR\->list(\*(L"Wiles\*(R") or \f(CW$inv\fR\->list(\*(L"cwi\*(R") of which any of these would return a complete list of the inventory items at that station
or
\&\f(CW$inv\fR = HFR::ACORN::Inventory\->new( station => \*(L"Spencer\*(R"); #create new MySQL table for station
\&\f(CW$inv\fR\->add_item( name => \*(L"12 inch spanner\*(R" , condition => \*(L"rusty\*(R" );
\&\f(CW$inv\fR\->add_item( name => \*(L"\s-1WERA\s0 \s-1RTU\s0\*(R" , serial_no => \*(L"12312378\*(R" , photo => \*(L"wera_rack_rtu_cwi.png\*(R" , condition => \*(L"original\*(R" );
.PP
\&\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
Visualisation is another potential of the toolbox
\&\f(CW$fig\fR = HFR::Plot::Coverage\->new( \f(CW@nc_filenames\fR );
or
\&\f(CW$fig\fR = HFR::Plot::Vectors\->new(
.SS "\s-1EXPORT\s0"
.IX Subsection "EXPORT"
None by default.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
packages used:
Date::Calc
\&\s-1PDL\s0
PDL::NetCDF
PDL::Slatec
PDL::NiceSllice
.PP
Mention other useful documentation such as the documentation of
related modules or operating system documentation (such as man pages
in \s-1UNIX\s0), or any relevant external documentation such as RFCs or
standards.
.PP
If you have a mailing list set up for your module, mention it here.
.PP
If you have a web site set up for your module, mention it here.
.SH "AUTHOR"
.IX Header "AUTHOR"
Daniel Atwater, <danielpath2o@gmail.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2008 by Daniel Patrick Lewis Atwater
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself, either Perl version 5.12.3 or,
at your option, any later version of Perl 5 you may have available.
